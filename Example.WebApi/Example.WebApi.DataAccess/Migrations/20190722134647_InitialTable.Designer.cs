// <auto-generated />
using System;
using Example.WebApi.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Example.WebApi.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20190722134647_InitialTable")]
    partial class InitialTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Example.WebApi.DataAccess.Model.Database.Master.Customers", b =>
                {
                    b.Property<long>("customerID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate");

                    b.Property<string>("customerName")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(25);

                    b.Property<string>("mobile")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("status")
                        .IsRequired()
                        .HasMaxLength(1);

                    b.HasKey("customerID");

                    b.HasIndex("email")
                        .IsUnique();

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Example.WebApi.DataAccess.Model.Database.Master.CustomerStatus", b =>
                {
                    b.Property<string>("code")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1);

                    b.Property<string>("description")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("code");

                    b.ToTable("CustomerStatus");

                    b.HasData(
                        new { code = "A", description = "Active" },
                        new { code = "L", description = "Locked" },
                        new { code = "S", description = "Suspend" },
                        new { code = "C", description = "Cancel" },
                        new { code = "D", description = "De-Active" }
                    );
                });

            modelBuilder.Entity("Example.WebApi.DataAccess.Model.Database.Master.TransactionsStatus", b =>
                {
                    b.Property<string>("code")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1);

                    b.Property<string>("description")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("code");

                    b.ToTable("TransactionsStatus");

                    b.HasData(
                        new { code = "S", description = "Success" },
                        new { code = "W", description = "Waiting" },
                        new { code = "C", description = "Canceled" },
                        new { code = "F", description = "Failed" }
                    );
                });

            modelBuilder.Entity("Example.WebApi.DataAccess.Model.Database.Operation.Transactions", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<long>("CustomerRefID");

                    b.Property<string>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate");

                    b.Property<decimal>("amount")
                        .HasColumnType("numeric(15,2)");

                    b.Property<string>("currency")
                        .IsRequired()
                        .HasMaxLength(3);

                    b.Property<long>("customerID");

                    b.Property<DateTime>("date");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasMaxLength(1);

                    b.HasKey("id");

                    b.HasIndex("CustomerRefID");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("Example.WebApi.DataAccess.Model.Database.Operation.Transactions", b =>
                {
                    b.HasOne("Example.WebApi.DataAccess.Model.Database.Master.Customers", "customers")
                        .WithMany("transactions")
                        .HasForeignKey("CustomerRefID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
